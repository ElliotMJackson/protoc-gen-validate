syntax = "proto3";

package package.v1;
option go_package = "github.com/envoyproxy/protoc-gen-validate/tests/harness/cases/go;cases";
import "other_package/v1/other_embed.proto";

import "validate.proto";
import "google/protobuf/duration.proto";

message Embed {
  int64 val = 1 [(validate.rules).int64.gt = 0];
}
enum AnEnum {
  AN_ENUM_UNSPECIFIED = 0;
  AN_ENUM_X = 1;
  AN_ENUM_Y = 2;
}

message RepeatedNone {
  repeated int64 val = 1;
}
message RepeatedEmbedNone {
  repeated Embed val = 1;
}
message RepeatedEmbedCrossPackageNone {
  repeated other_package.v1.Embed val = 1;
}
message RepeatedMin {
  repeated Embed val = 1 [(validate.rules).repeated .min_items = 2];
}
message RepeatedMax {
  repeated double val = 1 [(validate.rules).repeated .max_items = 3];
}
message RepeatedMinMax {
  repeated sfixed32 val = 1 [(validate.rules).repeated = {min_items: 2, max_items: 4}];
}
message RepeatedExact {
  repeated uint32 val = 1 [(validate.rules).repeated = {min_items: 3, max_items: 3}];
}
message RepeatedUnique {
  repeated string val = 1 [(validate.rules).repeated .unique = true];
}
message RepeatedItemRule {
  repeated float val = 1 [(validate.rules).repeated .items.float.gt = 0];
}
message RepeatedItemPattern {
  repeated string val = 1 [(validate.rules).repeated .items.string.pattern = "(?i)^[a-z0-9]+$"];
}
message RepeatedEmbedSkip {
  repeated Embed val = 1 [(validate.rules).repeated .items.message.skip = true];
}
message RepeatedItemIn {
  repeated string val = 1 [(validate.rules).repeated .items.string = {in: ["foo", "bar"]}];
}
message RepeatedItemNotIn {
  repeated string val = 1 [(validate.rules).repeated .items.string = {not_in: ["foo", "bar"]}];
}
message RepeatedEnumIn {
  repeated AnEnum val = 1 [(validate.rules).repeated .items.enum = {in: [0]}];
}
message RepeatedEnumNotIn {
  repeated AnEnum val = 1 [(validate.rules).repeated .items.enum = {not_in: [0]}];
}
message RepeatedEmbeddedEnumIn {
  repeated AnotherInEnum val = 1 [(validate.rules).repeated .items.enum = {in: [0]}];
  enum AnotherInEnum {
    ANOTHER_IN_ENUM_UNSPECIFIED = 0;
    ANOTHER_IN_ENUM_A = 1;
    ANOTHER_IN_ENUM_B = 2;
  }
}
message RepeatedEmbeddedEnumNotIn {
  repeated AnotherNotInEnum val = 1 [(validate.rules).repeated .items.enum = {not_in: [0]}];
  enum AnotherNotInEnum {
    ANOTHER_NOT_IN_ENUM_UNSPECIFIED = 0;
    ANOTHER_NOT_IN_ENUM_A = 1;
    ANOTHER_NOT_IN_ENUM_B = 2;
  }
}
message RepeatedMinAndItemLen {
  repeated string val = 1 [(validate.rules).repeated = {items {string {len: 3}}, min_items: 1}];
}
message RepeatedMinAndMaxItemLen {
  repeated string val = 1
      [(validate.rules).repeated .min_items = 1, (validate.rules).repeated .max_items = 3];
}
message RepeatedDuration {
  repeated google.protobuf.Duration val = 1
      [(validate.rules).repeated = {items {duration {gte {nanos: 1000000}}}}];
}
message RepeatedExactIgnore {
  repeated uint32 val = 1
      [(validate.rules).repeated = {min_items: 3, max_items: 3, ignore_empty: true}];
}
